{"version":3,"sources":["webpack:///./node_modules/vue-router/dist/vue-router.esm.js"],"names":["isError","err","Object","prototype","toString","call","indexOf","extend","a","b","key","View","name","functional","props","type","String","default","render","_","ref","children","parent","data","routerView","h","$createElement","route","$route","cache","_routerViewCache","depth","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_inactive","$parent","routerViewDepth","matched","component","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","init","propsToPass","config","params","undefined","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","replace","decode","decodeURIComponent","parseQuery","query","res","trim","split","forEach","param","parts","shift","length","join","Array","isArray","push","stringifyQuery","obj","keys","map","result","val2","filter","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","e","meta","path","hash","fullPath","getFullPath","formatMatch","freeze","value","START","unshift","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","_Vue","toTypes","eventTypes","Link","to","required","tag","exact","Boolean","append","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","findAnchor","child","i","$slots","isStatic","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","inBrowser","window","resolvePath","relative","base","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","parse","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","index","defaultDelimiter","delimiter","exec","m","escaped","offset","slice","next","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","JSON","stringify","j","attachKeys","re","flags","sensitive","strict","end","endsWithDelimiter","groups","source","match","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","normalizeLocation","raw","_normalized","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","positionStore","setupScroll","history","replaceState","getStateKey","origin","addEventListener","saveScrollPosition","state","_key","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","v","isObject","selector","el","document","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","Time","performance","now","Date","genKey","toFixed","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","concat","apply","called","args","arguments","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","Math","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","configurable","registerHook","list","get","$once","setupHashListener","_route","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","install","Vue","installed","isDef","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","destroyed","defineProperty","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","version","use","__webpack_exports__"],"mappings":"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","file":"js/npm.vue-router.97f9dbb3.js","sourcesContent":["/*!\n  * vue-router v3.0.6\n  * (c) 2019 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode && parent.$vnode.data;\n      if (vnodeData) {\n        if (vnodeData.routerView) {\n          depth++;\n        }\n        if (vnodeData.keepAlive && parent._inactive) {\n          inactive = true;\n        }\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    if (params.pathMatch) { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    return extend({}, raw)\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) { href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex); }\n    else { href = decodeURI(href); }\n  } else {\n    if (searchIndex > -1) { href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex); }\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n"],"sourceRoot":""}